HW1
Problem(1)
1. => O(log2(n))
2. Count of FuncB visits:
FuncB visits 2 times [visit of(n-1)] + 1 call for C(0) + itself call
C(n) = 2 C(n-1) + 2 
= 2 ( 2 C(n-2) + 2 ) + 2 = 2 ( 2 ( 2 C(n-3) + 2 ) + 2 ) + 2
= 2^k C(n-k) + 2^(k) + 2^(k-1) + ..+ 2
= 2^n C(0) + 2^n + 2^(n-1) + ... + 2
= 2^n + (2 + 4 + 8 + ... + 2^n)
= 2^n + 2(1-2^(n))/(1-2)= 2^n + 2(2^n-1) = 2^n(1-2)-2=3x2^n-2
=> O(2^n)
3. 